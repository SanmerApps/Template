package dev.sanmer.app.ui.theme

import androidx.compose.material3.darkColorScheme
import androidx.compose.material3.lightColorScheme
import androidx.compose.ui.graphics.Color

private val blue_light_primary = Color(0xFF0061A4)
private val blue_light_onPrimary = Color(0xFFFFFFFF)
private val blue_light_primaryContainer = Color(0xFFD1E4FF)
private val blue_light_onPrimaryContainer = Color(0xFF001D36)
private val blue_light_secondary = Color(0xFF535F70)
private val blue_light_onSecondary = Color(0xFFFFFFFF)
private val blue_light_secondaryContainer = Color(0xFFD7E3F7)
private val blue_light_onSecondaryContainer = Color(0xFF101C2B)
private val blue_light_tertiary = Color(0xFF6B5778)
private val blue_light_onTertiary = Color(0xFFFFFFFF)
private val blue_light_tertiaryContainer = Color(0xFFF2DAFF)
private val blue_light_onTertiaryContainer = Color(0xFF251431)
private val blue_light_error = Color(0xFFBA1A1A)
private val blue_light_errorContainer = Color(0xFFFFDAD6)
private val blue_light_onError = Color(0xFFFFFFFF)
private val blue_light_onErrorContainer = Color(0xFF410002)
private val blue_light_background = Color(0xFFFDFCFF)
private val blue_light_onBackground = Color(0xFF1A1C1E)
private val blue_light_surface = Color(0xFFFDFCFF)
private val blue_light_onSurface = Color(0xFF1A1C1E)
private val blue_light_surfaceVariant = Color(0xFFDFE2EB)
private val blue_light_onSurfaceVariant = Color(0xFF43474E)
private val blue_light_outline = Color(0xFF73777F)
private val blue_light_inverseOnSurface = Color(0xFFF1F0F4)
private val blue_light_inverseSurface = Color(0xFF2F3033)
private val blue_light_inversePrimary = Color(0xFF9ECAFF)
private val blue_light_shadow = Color(0xFF000000)
private val blue_light_surfaceTint = Color(0xFF0061A4)

private val blue_dark_primary = Color(0xFF9ECAFF)
private val blue_dark_onPrimary = Color(0xFF003258)
private val blue_dark_primaryContainer = Color(0xFF00497D)
private val blue_dark_onPrimaryContainer = Color(0xFFD1E4FF)
private val blue_dark_secondary = Color(0xFFBBC7DB)
private val blue_dark_onSecondary = Color(0xFF253140)
private val blue_dark_secondaryContainer = Color(0xFF3B4858)
private val blue_dark_onSecondaryContainer = Color(0xFFD7E3F7)
private val blue_dark_tertiary = Color(0xFFD6BEE4)
private val blue_dark_onTertiary = Color(0xFF3B2948)
private val blue_dark_tertiaryContainer = Color(0xFF523F5F)
private val blue_dark_onTertiaryContainer = Color(0xFFF2DAFF)
private val blue_dark_error = Color(0xFFFFB4AB)
private val blue_dark_errorContainer = Color(0xFF93000A)
private val blue_dark_onError = Color(0xFF690005)
private val blue_dark_onErrorContainer = Color(0xFFFFDAD6)
private val blue_dark_background = Color(0xFF1A1C1E)
private val blue_dark_onBackground = Color(0xFFE2E2E6)
private val blue_dark_surface = Color(0xFF1A1C1E)
private val blue_dark_onSurface = Color(0xFFE2E2E6)
private val blue_dark_surfaceVariant = Color(0xFF43474E)
private val blue_dark_onSurfaceVariant = Color(0xFFC3C7CF)
private val blue_dark_outline = Color(0xFF8D9199)
private val blue_dark_inverseOnSurface = Color(0xFF1A1C1E)
private val blue_dark_inverseSurface = Color(0xFFE2E2E6)
private val blue_dark_inversePrimary = Color(0xFF0061A4)
private val blue_dark_shadow = Color(0xFF000000)
private val blue_dark_surfaceTint = Color(0xFF9ECAFF)

val BlueLightColorScheme = lightColorScheme(
    surfaceTint = blue_light_surfaceTint,
    onErrorContainer = blue_light_onErrorContainer,
    onError = blue_light_onError,
    errorContainer = blue_light_errorContainer,
    onTertiaryContainer = blue_light_onTertiaryContainer,
    onTertiary = blue_light_onTertiary,
    tertiaryContainer = blue_light_tertiaryContainer,
    tertiary = blue_light_tertiary,
    error = blue_light_error,
    outline = blue_light_outline,
    onBackground = blue_light_onBackground,
    background = blue_light_background,
    inverseOnSurface = blue_light_inverseOnSurface,
    inverseSurface = blue_light_inverseSurface,
    onSurfaceVariant = blue_light_onSurfaceVariant,
    onSurface = blue_light_onSurface,
    surfaceVariant = blue_light_surfaceVariant,
    surface = blue_light_surface,
    onSecondaryContainer = blue_light_onSecondaryContainer,
    onSecondary = blue_light_onSecondary,
    secondaryContainer = blue_light_secondaryContainer,
    secondary = blue_light_secondary,
    inversePrimary = blue_light_inversePrimary,
    onPrimaryContainer = blue_light_onPrimaryContainer,
    onPrimary = blue_light_onPrimary,
    primaryContainer = blue_light_primaryContainer,
    primary = blue_light_primary,
)

val BlueDarkColorScheme = darkColorScheme(
    surfaceTint = blue_dark_surfaceTint,
    onErrorContainer = blue_dark_onErrorContainer,
    onError = blue_dark_onError,
    errorContainer = blue_dark_errorContainer,
    onTertiaryContainer = blue_dark_onTertiaryContainer,
    onTertiary = blue_dark_onTertiary,
    tertiaryContainer = blue_dark_tertiaryContainer,
    tertiary = blue_dark_tertiary,
    error = blue_dark_error,
    outline = blue_dark_outline,
    onBackground = blue_dark_onBackground,
    background = blue_dark_background,
    inverseOnSurface = blue_dark_inverseOnSurface,
    inverseSurface = blue_dark_inverseSurface,
    onSurfaceVariant = blue_dark_onSurfaceVariant,
    onSurface = blue_dark_onSurface,
    surfaceVariant = blue_dark_surfaceVariant,
    surface = blue_dark_surface,
    onSecondaryContainer = blue_dark_onSecondaryContainer,
    onSecondary = blue_dark_onSecondary,
    secondaryContainer = blue_dark_secondaryContainer,
    secondary = blue_dark_secondary,
    inversePrimary = blue_dark_inversePrimary,
    onPrimaryContainer = blue_dark_onPrimaryContainer,
    onPrimary = blue_dark_onPrimary,
    primaryContainer = blue_dark_primaryContainer,
    primary = blue_dark_primary,
)